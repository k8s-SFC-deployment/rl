import numpy as np
import torch
from collections import defaultdict

class ReplayBuffer():
    def __init__(self, capacity):
        self.capacity = capacity
        self.cursor = 0
        self.observations = []
        self.actions = []
        self.rewards = []
        self.next_observations = []
        self.dones = []

    def push(self, observation, action, reward, next_observation, done):
        if len(self.observations) < self.capacity:
            self.observations.append(observation)
            self.actions.append(action)
            self.rewards.append(reward)
            self.next_observations.append(next_observation)
            self.dones.append(done)
        else:
            self.observations[self.cursor] = observation
            self.actions[self.cursor] = action
            self.rewards[self.cursor] = reward
            self.next_observations[self.cursor] = next_observation
            self.dones[self.cursor] = done
        self.cursor = (self.cursor + 1) % self.capacity

    def sample(self, batch_size):
        indices = np.random.choice(len(self.observations), batch_size)
        return (
            self._format_observations([self.observations[i] for i in indices]), # Dict
            torch.concat([self.actions[i] for i in indices], dim=0).detach(), # (Batch, Node)
            torch.concat([self.rewards[i] for i in indices], dim=0).detach(), # (Batch)
            self._format_observations([self.next_observations[i] for i in indices]), # Dict
            torch.concat([self.dones[i] for i in indices], dim=0).detach().float(), # (Batch)
        )

    def _format_observations(self, observations):
        dict_obs = defaultdict(list)
        for observation in observations:
            for key, value in observation.items():
                if type(value) != torch.Tensor:
                    value = torch.tensor(value)
                dict_obs[key].append(value)
        for key, value in dict_obs.items():
            dict_obs[key] = torch.concat(value, dim=0).detach()
        return dict_obs



if __name__ == "__main__":
    sample_transition = (
        {
            'node_edge_attr': torch.tensor([[
                [ 0.5323,  0.5364, -0.4780],
                [ 1.2877,  1.0776, -0.2833],
                [-0.3609, -0.2992,  0.0733],
                [ 0.6492,  1.0686,  0.2770],
                [ 0.4368,  0.2031, -0.5386],
                [-0.2064, -0.1856, -0.1464],
                [ 2.0001,  2.0350, -0.2709],
                [-1.2738, -0.9915, -0.2081],
                [ 1.1053,  0.9662, -0.6553],
                [ 1.3410,  1.4260,  0.9824],
                [ 1.1499,  1.1499, -0.4084],
                [ 2.4008,  2.3841,  1.2799],
                [ 0.9101,  1.0161,  1.4625],
                [-0.2971, -0.6888, -0.8989],
                [ 0.7159,  0.6777,  1.0894],
                [ 0.6144,  0.5818, -0.6749]]]),
            'node_edge_index': torch.tensor([[
                1., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 0., 1., 0., 0., 1., 0.,
                0., 0., 0., 0., 1., 0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 1., 0., 0.,
                1., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 0.,
                1., 0., 0., 1., 0., 0., 0., 0., 0., 1., 0., 0., 1., 0., 1., 0., 0., 0.,
                0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0.,
                1., 0., 0., 0., 0., 1., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0., 0., 1.,
                0., 1., 0., 0., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 1., 0., 0.,
                0., 1.]]), 
            'node_vertex_attr': torch.tensor([[
                [-0.7750,  0.5554,  1.8049,  1.8204],
                [-0.7878,  0.9438, -0.3506, -0.3346],
                [-1.2269,  1.6282,  1.4265,  1.6111],
                [ 0.2155,  0.1789, -0.4408, -0.4859]]]),
            'pod_node_edge': torch.tensor([[1., 0., 0., 0., 0., 0.]]),
            'pod_service_edge': torch.tensor([[1., 0., 0., 0., 0., 0.]]),
            'pod_vertex_attr': torch.tensor([[
                [-0.4196,  1.9956,  1.4696,  1.6911],
                [ 1.5838,  1.3931, -0.6367, -0.5765],
                [-0.6399, -2.2546, -0.6449, -1.1445],
                [-1.2310, -0.4370, -0.7099, -0.4105],
                [-1.5499, -0.9544, -0.8056, -0.4669],
                [ 0.0936, -0.6966, -0.8316, -0.6952],
                [-1.9165,  0.1773, -0.6867, -0.7639],
                [-2.4140, -1.5701, -0.7108, -0.8787],
                [ 0.8989,  0.8031, -0.6209, -0.2835],
                [ 0.7810,  1.4323,  0.4965,  0.3525],
                [ 1.0408,  2.1187,  1.0506,  1.1929],
                [ 1.4228,  1.8525,  0.7731, -0.4640],
                [ 0.0422, -0.2303, -0.3651, -0.4026],
                [ 2.1156,  2.4003,  0.5037, -0.3596],
                [-0.5172,  0.3975, -0.6217, -0.3826],
                [ 0.4642,  0.1702, -0.3616, -0.0354],
                [ 1.5469,  1.4561, -0.4129, -0.1841],
                [ 2.1652,  1.6168,  1.4170, -0.0167],
                [ 1.1734,  0.8038, -0.4890, -0.3111],
                [ 1.7715,  1.2802, -0.5470, -0.2221],
                [ 0.2658,  0.7024, -0.2863,  0.7377],
                [ 0.0027,  0.7325, -0.2549,  0.1348],
                [-0.4651, -0.4492, -0.2605, -0.3511],
                [-0.4149, -0.4028, -0.2962, -0.4443],
                [-0.3721, -0.3559, -0.2558, -0.2956],
                [-0.3503, -0.2882, -0.2342, -0.2802],
                [-0.2671, -0.3074, -0.3074, -0.2085],
                [-0.2143, -0.2466, -0.2494, -0.2500],
                [-0.1718, -0.1740, -0.1741, -0.1741],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000]]]),
            'service_edge_attr': torch.tensor([[
                [ 0.0000,  0.0000,  0.0000],
                [-1.0874, -0.5461, -0.8585],
                [-0.8280, -0.5944, -0.6867],
                [ 1.2318, -0.0804,  1.5872],
                [-0.9247, -0.3776, -0.7985],
                [ 0.7643, -0.1208,  2.3031],
                [ 0.5479, -0.1783,  1.2343],
                [ 0.4592,  2.7559,  1.2773],
                [-0.4401, -0.2501, -0.4372],
                [-0.3425, -0.1776, -0.3608],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.3511, -0.5017,  1.2796],
                [-1.2563, -0.4944, -1.3701],
                [-1.0740, -0.3365, -0.8808],
                [ 0.8523, -0.2582,  1.3048],
                [-0.9036, -0.3573, -0.8578],
                [-0.7263, -0.6152, -0.7272],
                [-0.5387, -0.1851, -0.5706],
                [-0.5437, -0.3758, -0.5510],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.8202, -0.6088,  1.3726],
                [-0.2999, -0.4725,  0.2578],
                [-0.3384, -0.3751, -0.0952],
                [ 0.5329, -0.3721,  0.6162],
                [ 0.7625,  1.1148,  0.8881],
                [-0.6228, -0.1819, -0.6562],
                [-0.5249, -0.1842, -0.5478],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.6604, -0.6837,  1.0100],
                [ 0.1966, -0.4482,  1.3128],
                [-0.5466, -0.3224, -0.1254],
                [ 0.4037, -0.2245,  0.7302],
                [ 0.0428, -0.3183,  0.4030],
                [-0.5933, -0.2574, -0.5844],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.2645, -0.4972,  1.3228],
                [ 1.1775, -0.5099,  1.9788],
                [-0.1591, -0.2354,  0.0372],
                [-0.8731, -0.3946, -0.8937],
                [-0.1448, -0.2846,  0.3118],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.7414, -0.5255,  1.4204],
                [-0.0340, -0.3462,  0.1246],
                [ 0.4369, -0.4464,  1.0781],
                [ 0.8480, -0.2561,  1.5917],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.7773, -0.4204,  0.9400],
                [ 0.1893, -0.4115,  0.9338],
                [-1.0192, -0.3797, -1.0325],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 1.7348,  1.3991,  2.9425],
                [-1.2209, -0.4038, -1.1867],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.9237, -0.4348,  1.7413],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000]]]),
            'service_edge_index': torch.tensor([[1., 0., 0., 0., 0., 1.]]),
            'service_vertex_attr': torch.tensor([[
                [ 1.1954,  0.7728,  0.7255,  0.7721],
                [-0.2715,  0.3559, -0.9290, -0.6682],
                [-0.4791,  0.4622, -1.2100, -0.7852],
                [ 0.9809,  1.3974,  0.1314,  0.3366],
                [ 0.7044,  1.1438,  0.9896,  0.1392],
                [ 0.6172,  0.7439,  0.3119, -0.3595],
                [ 0.4274,  0.3695, -0.7894, -0.6800],
                [ 1.9514,  1.8686,  0.3919, -0.3918],
                [ 0.7719, -0.0540, -0.8112, -0.7866],
                [-0.6058,  0.7362, -0.8434, -0.5409]]]),
            'target_service_idx': torch.tensor([[0., 0., 0., 0., 0., 0., 0., 0., 1., 0.]])
        },
        torch.tensor([[0.2476, 0.2496, 0.2521, 0.2507]]),
        torch.tensor([-0.16549267]),
        {
            'node_edge_attr': torch.tensor([[
                [ 0.5323,  0.5364, -0.4780],
                [ 1.2877,  1.0776, -0.2833],
                [-0.3609, -0.2992,  0.0733],
                [ 0.6492,  1.0686,  0.2770],
                [ 0.4368,  0.2031, -0.5386],
                [-0.2064, -0.1856, -0.1464],
                [ 2.0001,  2.0350, -0.2709],
                [-1.2738, -0.9915, -0.2081],
                [ 1.1053,  0.9662, -0.6553],
                [ 1.3410,  1.4260,  0.9824],
                [ 1.1499,  1.1499, -0.4084],
                [ 2.4008,  2.3841,  1.2799],
                [ 0.9101,  1.0161,  1.4625],
                [-0.2971, -0.6888, -0.8989],
                [ 0.7159,  0.6777,  1.0894],
                [ 0.6144,  0.5818, -0.6749]]]),
            'node_edge_index': torch.tensor([[
                1., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 0., 1., 0., 0., 1., 0.,
                0., 0., 0., 0., 1., 0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 1., 0., 0.,
                1., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 0.,
                1., 0., 0., 1., 0., 0., 0., 0., 0., 1., 0., 0., 1., 0., 1., 0., 0., 0.,
                0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0.,
                1., 0., 0., 0., 0., 1., 0., 0., 0., 1., 1., 0., 0., 0., 0., 0., 0., 1.,
                0., 1., 0., 0., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 1., 0., 0.,
                0., 1.]]), 
            'node_vertex_attr': torch.tensor([[
                [-0.7750,  0.5554,  1.8049,  1.8204],
                [-0.7878,  0.9438, -0.3506, -0.3346],
                [-1.2269,  1.6282,  1.4265,  1.6111],
                [ 0.2155,  0.1789, -0.4408, -0.4859]]]),
            'pod_node_edge': torch.tensor([[1., 0., 0., 0., 0., 0.]]),
            'pod_service_edge': torch.tensor([[1., 0., 0., 0., 0., 0.]]),
            'pod_vertex_attr': torch.tensor([[
                [-0.4196,  1.9956,  1.4696,  1.6911],
                [ 1.5838,  1.3931, -0.6367, -0.5765],
                [-0.6399, -2.2546, -0.6449, -1.1445],
                [-1.2310, -0.4370, -0.7099, -0.4105],
                [-1.5499, -0.9544, -0.8056, -0.4669],
                [ 0.0936, -0.6966, -0.8316, -0.6952],
                [-1.9165,  0.1773, -0.6867, -0.7639],
                [-2.4140, -1.5701, -0.7108, -0.8787],
                [ 0.8989,  0.8031, -0.6209, -0.2835],
                [ 0.7810,  1.4323,  0.4965,  0.3525],
                [ 1.0408,  2.1187,  1.0506,  1.1929],
                [ 1.4228,  1.8525,  0.7731, -0.4640],
                [ 0.0422, -0.2303, -0.3651, -0.4026],
                [ 2.1156,  2.4003,  0.5037, -0.3596],
                [-0.5172,  0.3975, -0.6217, -0.3826],
                [ 0.4642,  0.1702, -0.3616, -0.0354],
                [ 1.5469,  1.4561, -0.4129, -0.1841],
                [ 2.1652,  1.6168,  1.4170, -0.0167],
                [ 1.1734,  0.8038, -0.4890, -0.3111],
                [ 1.7715,  1.2802, -0.5470, -0.2221],
                [ 0.2658,  0.7024, -0.2863,  0.7377],
                [ 0.0027,  0.7325, -0.2549,  0.1348],
                [-0.4651, -0.4492, -0.2605, -0.3511],
                [-0.4149, -0.4028, -0.2962, -0.4443],
                [-0.3721, -0.3559, -0.2558, -0.2956],
                [-0.3503, -0.2882, -0.2342, -0.2802],
                [-0.2671, -0.3074, -0.3074, -0.2085],
                [-0.2143, -0.2466, -0.2494, -0.2500],
                [-0.1718, -0.1740, -0.1741, -0.1741],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000,  0.0000]]]),
            'service_edge_attr': torch.tensor([[
                [ 0.0000,  0.0000,  0.0000],
                [-1.0874, -0.5461, -0.8585],
                [-0.8280, -0.5944, -0.6867],
                [ 1.2318, -0.0804,  1.5872],
                [-0.9247, -0.3776, -0.7985],
                [ 0.7643, -0.1208,  2.3031],
                [ 0.5479, -0.1783,  1.2343],
                [ 0.4592,  2.7559,  1.2773],
                [-0.4401, -0.2501, -0.4372],
                [-0.3425, -0.1776, -0.3608],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.3511, -0.5017,  1.2796],
                [-1.2563, -0.4944, -1.3701],
                [-1.0740, -0.3365, -0.8808],
                [ 0.8523, -0.2582,  1.3048],
                [-0.9036, -0.3573, -0.8578],
                [-0.7263, -0.6152, -0.7272],
                [-0.5387, -0.1851, -0.5706],
                [-0.5437, -0.3758, -0.5510],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.8202, -0.6088,  1.3726],
                [-0.2999, -0.4725,  0.2578],
                [-0.3384, -0.3751, -0.0952],
                [ 0.5329, -0.3721,  0.6162],
                [ 0.7625,  1.1148,  0.8881],
                [-0.6228, -0.1819, -0.6562],
                [-0.5249, -0.1842, -0.5478],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.6604, -0.6837,  1.0100],
                [ 0.1966, -0.4482,  1.3128],
                [-0.5466, -0.3224, -0.1254],
                [ 0.4037, -0.2245,  0.7302],
                [ 0.0428, -0.3183,  0.4030],
                [-0.5933, -0.2574, -0.5844],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.2645, -0.4972,  1.3228],
                [ 1.1775, -0.5099,  1.9788],
                [-0.1591, -0.2354,  0.0372],
                [-0.8731, -0.3946, -0.8937],
                [-0.1448, -0.2846,  0.3118],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.7414, -0.5255,  1.4204],
                [-0.0340, -0.3462,  0.1246],
                [ 0.4369, -0.4464,  1.0781],
                [ 0.8480, -0.2561,  1.5917],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.7773, -0.4204,  0.9400],
                [ 0.1893, -0.4115,  0.9338],
                [-1.0192, -0.3797, -1.0325],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 1.7348,  1.3991,  2.9425],
                [-1.2209, -0.4038, -1.1867],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.9237, -0.4348,  1.7413],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000],
                [ 0.0000,  0.0000,  0.0000]]]),
            'service_edge_index': torch.tensor([[1., 0., 0., 0., 0., 1.]]),
            'service_vertex_attr': torch.tensor([[
                [ 1.1954,  0.7728,  0.7255,  0.7721],
                [-0.2715,  0.3559, -0.9290, -0.6682],
                [-0.4791,  0.4622, -1.2100, -0.7852],
                [ 0.9809,  1.3974,  0.1314,  0.3366],
                [ 0.7044,  1.1438,  0.9896,  0.1392],
                [ 0.6172,  0.7439,  0.3119, -0.3595],
                [ 0.4274,  0.3695, -0.7894, -0.6800],
                [ 1.9514,  1.8686,  0.3919, -0.3918],
                [ 0.7719, -0.0540, -0.8112, -0.7866],
                [-0.6058,  0.7362, -0.8434, -0.5409]]]),
            'target_service_idx': torch.tensor([[0., 0., 0., 0., 0., 0., 0., 0., 1., 0.]])
        },
        torch.tensor([False]),
    )
    buffer = ReplayBuffer(100)
    for i in range(100):
        buffer.push(*sample_transition)
    for i in range(10):
        print(buffer.sample(10))
